import java.lang.Boolean;

CREATE TABLE item(
  _id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  listing TEXT NOT NULL,
  package TEXT NOT NULL,
  class TEXT NOT NULL,
  deprecated INTEGER AS Boolean NOT NULL DEFAULT 0,
  link TEXT NOT NULL
);

insert_item:
INSERT INTO item(listing, package, class, deprecated, link) VALUES (?, ?, ?, ?, ?)
;

clear_listing:
DELETE FROM item
WHERE listing = ?
;

count:
SELECT COUNT(_id)
FROM item
;

query_term:
SELECT item.*
FROM item
WHERE class LIKE '%' || ?1 || '%' ESCAPE '\'
ORDER BY
  /* deprecated classes are always last */
  deprecated ASC,
  CASE
    /* exact match */
    WHEN class LIKE ?1 ESCAPE '\' THEN 1
    /* prefix match with no nested type */
    WHEN class LIKE ?1 || '%' ESCAPE '\' AND instr(class, '.') = 0 THEN 2
    /* exact match on nested type */
    WHEN class LIKE '%.' || ?1 ESCAPE '\' THEN 3
    /* prefix match (allowing nested types) */
    WHEN class LIKE ?1 || '%' ESCAPE '\' THEN 4
    /* prefix match on nested type */
    WHEN class LIKE '%.' || ?1 || '%' ESCAPE '\' THEN 5
    /* infix match */
    ELSE 6
  END ASC,
  /* prefer "closer" matches based on length */
  length(class) ASC,
  /* alphabetize to eliminate any remaining non-determinism */
  package ASC,
  class ASC
LIMIT 50
;
